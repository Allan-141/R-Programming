#1. Randomly generated 6 number from any distribution you preferred, say 𝑎, 𝑏, 𝑐, 𝑑, 𝑒, and 𝑓.

set.seed(123)
a <- rnorm(1, mean = 5, sd = 2)
b <- rnorm(1, mean = 5, sd = 2)
c <- rnorm(1, mean = 5, sd = 2)
d <- rnorm(1, mean = 5, sd = 2)
e <- rnorm(1, mean = 5, sd = 2)
f <- rnorm(1, mean = 5, sd = 2)

#The Six Numbers

> print(a)
[1] 3.879049
> print(b)
[1] 4.539645
> print(c)
[1] 8.117417
> print(d)
[1] 5.141017
> print(e)
[1] 5.258575
> print(f)
[1] 8.43013



#2. Create a vector 𝑋ଵ with length 50 where the elements are randomly generated from the normal
distribution with mean of 𝑎 and standard deviation 𝑏.


# Create a vector X with length 50
mean = 3
sd = 1
X <- rnorm(50, mean, sd)

# Print the vector X
print(X)

#The vector 𝑋ଵ Output

 [1] 3.460916 1.734939 2.313147 2.554338 4.224082 3.359814 3.400771 3.110683
 [9] 2.444159 4.786913 3.497850 1.033383 3.701356 2.527209 1.932176 2.782025
[17] 1.973996 2.271109 2.374961 1.313307 3.837787 3.153373 1.861863 4.253815
[25] 3.426464 2.704929 3.895126 3.878133 3.821581 3.688640 3.553918 2.938088
[33] 2.694037 2.619529 2.305293 2.792083 1.734604 5.168956 4.207962 1.876891
[41] 2.597115 2.533345 3.779965 2.916631 3.253319 2.971453 2.957130 4.368602
[49] 2.774229 4.516471


#3. Create a vector 𝑋ଶ with length 50 where the elements are randomly generated from the normal
distribution with mean of 𝑐 and standard deviation 𝑑. 

# Create a vector X with length 50
mean = 4
sd = 2
X <- rnorm(50, mean, sd)

# Print the vector X
print(X)

#The vector 𝑋ଶ output

 [1]  0.9024944  5.1692275  4.2477085  4.4318831  4.7592790  2.9953531
 [7]  3.3335852  1.9628492  1.8564175  4.6070573  4.8964196  4.1060085
[13]  5.8445349  8.1001694  3.0179377 -0.6183378  6.0114770  2.5815985
[19]  2.6239828  6.0511427  3.4304540  1.5585646  4.3626070  3.7222173
[25]  4.0115284  4.7705608  3.2586799  5.2887531  3.5590269  4.6635639
[31]  6.1936780  4.8703630  3.3481368  6.2976152  5.9870077  5.0967939
[37]  4.4774635  2.7441878  6.7213049  2.7994808  8.3746660  7.0652213
[43]  3.5285993  1.9471582  2.5791869  4.5137674  3.5066162  3.3049148
[49]  2.0967629  3.9099446



#4. Create a vector 𝑋ଷ with length 50 where the elements are randomly generated from the normal
distribution with mean of 𝑒 and standard deviation 𝑓. 


# Create a vector X with length 50
mean = 5
sd = 3
X <- rnorm(50, mean, sd)

# Print the vector X
print(X)

#The vector 𝑋ଷ output

 [1]  6.688969  3.882684  7.930920  3.876257  8.158134  1.852469  1.219534
 [8] 14.723120  3.749427  5.894683  6.909709  3.548658  6.550586  6.106894
[15]  4.353858  5.195879  4.897798 11.385356  2.775992  1.712011  5.113365
[22]  5.931442  6.309570  3.624904  1.810022  8.789556  3.951049  2.403461
[29]  4.291161  4.408472  8.329761  5.254212  7.262161  3.502124  5.643336
[36]  4.025942  5.283751  2.313910  1.067595 10.991640  6.802126  1.246186
[43]  3.166502  1.443560 11.596431  8.937239  4.204565  6.629582  3.756980
[50]  3.571259




#5. Create a vector 𝐸 with length 50 where the elements are randomly generated from the normal
distribution with mean of 0 and standard deviation 0.1, 


# Create a vector E with length 50
mean = 0
sd = 0.1
E <- rnorm(50, mean, sd)

# Print the vector E
print(E)

#The vector E output

 [1] -0.078860284 -0.059461727  0.165090747 -0.005402813  0.011924524
 [6]  0.024368743  0.123247588 -0.051606383 -0.099250715  0.167569693
[11] -0.044116322 -0.072306597 -0.123627312 -0.128471572 -0.057397348
[16]  0.061798582  0.110984814  0.070758835 -0.036365730  0.005974994
[21] -0.070459646 -0.071721816  0.088465050 -0.101559258  0.195529397
[26] -0.009031959  0.021453883 -0.073852770 -0.057438869 -0.131701613
[31] -0.018292539  0.041898240  0.032430434 -0.078153649 -0.078862197
[36] -0.050219872  0.149606067 -0.113730362 -0.017905159  0.190236182
[41] -0.010097489 -0.135984070 -0.066476944  0.048545998 -0.037560287
[46] -0.056187636 -0.034391723  0.009049665  0.159850877 -0.008856511



#6. Create a vector 𝑌 such that 𝑌 ൌ 2 ൅ 3𝑋ଵ ൅ 4𝑋ଶ ൅ 5𝑋ଷ ൅ 𝐸


# Create vector Xv, Xs, Xt with length 50
mean_v = 3
sd_v = 1
Xv <- rnorm(50, mean_v, sd_v)

mean_s = 4
sd_s = 2
Xs <- rnorm(50, mean_s, sd_s)

mean_t = 5
sd_t = 3
Xt <- rnorm(50, mean_t, sd_t)

# Create vector E with length 50
mean_e = 0
sd_e = 0.1
E <- rnorm(50, mean_e, sd_e)

# Create vector Y
Y <- 2 + 3*Xv + 4*Xs + 5*Xt + E

# Print the vector Y
print(Y)

#The Vector Y output


 [1]  45.26519  55.16820  24.51013 102.29649  57.81579  66.37927  42.49944
 [8]  66.44637  68.28639  58.85972  56.41840  22.52312  77.21653  52.58765
[15]  92.86403  39.89536  36.39556  65.60866  57.94577  47.24304  37.32587
[22]  59.45559  63.91739  25.13428  55.63726  47.59331  50.03614  47.43097
[29]  62.51746  56.55514  48.66558  38.39094  51.51190  57.00425  50.66886
[36]  30.51537  82.13398  38.25358  48.92368  60.74924  46.82688  56.14679
[43]  25.15540  48.82872  57.01352  16.37484  36.28845  49.41445  53.69502
[50]  30.64047



#7. Combine 𝑋ଵ, 𝑋ଶ, 𝑋ଷ into a 50 by 3 matrix X, i.e., 𝑋 ൌ ሾ𝑋ଵ, 𝑋ଶ, 𝑋ଷሿ


# Create vector Xv, Xs, Xt with length 50
mean_v = 3
sd_v = 1
Xv <- rnorm(50, mean_v, sd_v)

mean_s = 4
sd_s = 2
Xs <- rnorm(50, mean_s, sd_s)

mean_t = 5
sd_t = 3
Xt <- rnorm(50, mean_t, sd_t)

# Create matrix X
X <- cbind(Xv,Xs,Xt)

# Print the matrix X
print(X)

#The combination output

           Xv         Xs         Xt
 [1,] 4.110277  2.2081044  4.8461063
 [2,] 2.515012 -0.1415021  3.4192245
 [3,] 3.230617  4.3002403  4.4082054
 [4,] 2.704842  3.8415766  3.1112638
 [5,] 3.871965  3.8052615  2.4984693
 [6,] 2.651528  4.4323051  6.7361671
 [7,] 3.518504  5.7649303  1.7372579
 [8,] 2.609315  4.4111950  9.4520928
 [9,] 1.907213  2.7671283  1.4413802
[10,] 4.210011  2.5304015  5.3032375
[11,] 3.740900  3.7363944  6.5989679
[12,] 4.724262  4.6200340  6.7602060
[13,] 3.065154  1.9206393  4.0947600
[14,] 4.125003  3.6313823  5.2385060
[15,] 4.975419  5.9345345  7.8837925
[16,] 2.718518  3.7834398  0.6306022
[17,] 1.677049  2.6031587  2.6547809
[18,] 2.760648  3.4481097  5.9612069
[19,] 2.785959  6.2292971  3.6656541
[20,] 3.151681  5.1000879  9.1100120
[21,] 4.712305  6.4733516  7.0197616
[22,] 2.673856  4.2781957  5.2165003
[23,] 3.373005  4.8205502  0.4767280
[24,] 2.772316  2.8830862  5.0783007
[25,] 3.020451  5.2107413  4.0507524
[26,] 3.314058  2.9873329  4.6929605
[27,] 4.328215  1.1588690  1.4553223
[28,] 3.121318  4.2559859  6.4959741
[29,] 3.712842  7.8917024  1.8831307
[30,] 3.778860  5.6018287  4.3213341
[31,] 3.914773  6.3305068  6.1442775
[32,] 2.425605  4.7177114  2.6494526
[33,] 4.626881  2.7828856  6.7489742
[34,] 2.619043  3.5955183  1.0504688
[35,] 2.894216  3.4535038 -3.4293240
[36,] 4.404050  3.0626004  6.3949040
[37,] 4.294084  5.4083346  7.5216195
[38,] 1.910008  1.6052730  4.1424637
[39,] 2.126929  5.7327323  6.5123788
[40,] 1.641921  5.7283050  1.5322504
[41,] 3.181847  1.6027553  4.6185542
[42,] 3.164841  5.2789840 -0.8245551
[43,] 3.364115  8.8604533  8.5435427
[44,] 3.552158  2.8855690 10.5797326
[45,] 2.398107  5.6898085  8.2220368
[46,] 2.006301  2.4355963  4.9179591
[47,] 4.026785  6.2214228  4.9000090
[48,] 3.751061  4.4996494  0.4517971
[49,] 1.490833  7.3038308  7.3711560
[50,] 2.904853  1.0820585  4.3677975


#8. Let 𝐵 ൌ ሺ𝑋்𝑋ሻିଵ𝑋்𝑌 where the notation “T” is the transpose and the notation “-1” is the
inverse.


# Create vector Xv, Xs, Xt with length 50
mean_v = 3
sd_v = 1
Xv <- rnorm(50, mean_v, sd_v)

mean_s = 4
sd_s = 2
Xs <- rnorm(50, mean_s, sd_s)

mean_t = 5
sd_t = 3
Xt <- rnorm(50, mean_t, sd_t)

# Create matrix X
X <- cbind(Xv,Xs,Xt)

# Create vector Y
Y <- 2 + 3*Xv + 4*Xs + 5*Xt + E

# Calculate B
B <- solve(t(X) %*% X) %*% t(X) %*% Y

# Print the vector B
print(B)


#The output of value of B


       [,1]
Xv 3.335101
Xs 4.121092
Xt 5.084038
















































































































































